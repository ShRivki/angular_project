{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginService {\n  constructor(_http) {\n    this._http = _http;\n    this._userId = undefined;\n  }\n  getUser() {\n    return this._userId;\n  }\n  login(user) {\n    return this._http.get(\"/api/Users/0\");\n  }\n  logOut() {\n    this._userId = undefined;\n  }\n  register() {}\n  static #_ = this.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac\n  });\n}","map":{"version":3,"names":["LoginService","constructor","_http","_userId","undefined","getUser","login","user","get","logOut","register","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac"],"sources":["C:\\Users\\ASUS\\Desktop\\פרויקט אנגולר\\Angular-project\\src\\app\\modules\\user\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { User } from './user.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n    private _userId:number=undefined;\r\n    constructor(private _http:HttpClient){}\r\n    getUser(){\r\n        return this._userId\r\n    }\r\n    \r\n    login(user:User):Observable<Use{\r\n        return this._http.get<User>(\"/api/Users/0\",)\r\n       \r\n    }\r\n    logOut(){\r\n        this._userId=undefined;\r\n    }\r\n    register(){\r\n\r\n    }\r\n    \r\n}"],"mappings":";;AAMA,OAAM,MAAOA,YAAY;EAErBC,YAAoBC,KAAgB;IAAhB,KAAAA,KAAK,GAALA,KAAK;IADjB,KAAAC,OAAO,GAAQC,SAAS;EACM;EACtCC,OAAOA,CAAA;IACH,OAAO,IAAI,CAACF,OAAO;EACvB;EAEAG,KAAKA,CAACC,IAAS;IACX,OAAO,IAAI,CAACL,KAAK,CAACM,GAAG,CAAO,cAAc,CAAE;EAEhD;EACAC,MAAMA,CAAA;IACF,IAAI,CAACN,OAAO,GAACC,SAAS;EAC1B;EACAM,QAAQA,CAAA,GAER;EAAC,QAAAC,CAAA,G;qBAhBQX,YAAY,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZhB,YAAY;IAAAiB,OAAA,EAAZjB,YAAY,CAAAkB;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}