{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginService {\n  constructor(_http) {\n    this._http = _http;\n    this.user = undefined;\n    this.getUsersFromServer().subscribe(data => {\n      this.users = data;\n    });\n  }\n  getUsersFromServer() {\n    return this._http.get(\"/api/Users\");\n  }\n  getUser() {\n    return this.user;\n  }\n  login(user) {\n    return this._http.get(\"/api/Users/0\");\n  }\n  logOut() {\n    this.user = undefined;\n  }\n  register(user) {\n    var a = this._http.post(\"/api/Students\", user);\n    return a;\n  }\n  updDateUser(user) {\n    return this._http.put(`/api/user/${user.code}`, user);\n  }\n  static #_ = this.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac\n  });\n}","map":{"version":3,"names":["LoginService","constructor","_http","user","undefined","getUsersFromServer","subscribe","data","users","get","getUser","login","logOut","register","a","post","updDateUser","put","code","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac"],"sources":["C:\\Users\\ASUS\\Desktop\\פרויקט אנגולר\\Angular-project\\src\\app\\modules\\user\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { User } from './user.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n    private user: User = undefined;\r\n    users: User[];\r\n    constructor(private _http: HttpClient) {\r\n        this.getUsersFromServer().subscribe(data => {\r\n            this.users = data;\r\n        })\r\n    }\r\n    getUsersFromServer(): Observable<User[]> {\r\n        return this._http.get<User[]>(\"/api/Users\")\r\n    }\r\n    getUser() {\r\n        return this.user;\r\n    }\r\n\r\n    login(user: User): Observable<User> {\r\n        return this._http.get<User>(\"/api/Users/0\")\r\n    }\r\n    logOut() {\r\n        this.user = undefined;\r\n    }\r\n    register(user: User): Observable<User> {\r\n\r\n        var a = this._http.post<User>(\"/api/Students\", user);\r\n        return a\r\n    }\r\n    updDateUser(user: User): Observable<boolean> {\r\n        return this._http.put<boolean>(`/api/user/${user.code}`, user);\r\n    }\r\n\r\n}"],"mappings":";;AAMA,OAAM,MAAOA,YAAY;EAGrBC,YAAoBC,KAAiB;IAAjB,KAAAA,KAAK,GAALA,KAAK;IAFjB,KAAAC,IAAI,GAASC,SAAS;IAG1B,IAAI,CAACC,kBAAkB,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MACvC,IAAI,CAACC,KAAK,GAAGD,IAAI;IACrB,CAAC,CAAC;EACN;EACAF,kBAAkBA,CAAA;IACd,OAAO,IAAI,CAACH,KAAK,CAACO,GAAG,CAAS,YAAY,CAAC;EAC/C;EACAC,OAAOA,CAAA;IACH,OAAO,IAAI,CAACP,IAAI;EACpB;EAEAQ,KAAKA,CAACR,IAAU;IACZ,OAAO,IAAI,CAACD,KAAK,CAACO,GAAG,CAAO,cAAc,CAAC;EAC/C;EACAG,MAAMA,CAAA;IACF,IAAI,CAACT,IAAI,GAAGC,SAAS;EACzB;EACAS,QAAQA,CAACV,IAAU;IAEf,IAAIW,CAAC,GAAG,IAAI,CAACZ,KAAK,CAACa,IAAI,CAAO,eAAe,EAAEZ,IAAI,CAAC;IACpD,OAAOW,CAAC;EACZ;EACAE,WAAWA,CAACb,IAAU;IAClB,OAAO,IAAI,CAACD,KAAK,CAACe,GAAG,CAAU,aAAad,IAAI,CAACe,IAAI,EAAE,EAAEf,IAAI,CAAC;EAClE;EAAC,QAAAgB,CAAA,G;qBA5BQnB,YAAY,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZxB,YAAY;IAAAyB,OAAA,EAAZzB,YAAY,CAAA0B;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}